FrontendCore.debug=!0,describe("Autocomplete",function(){beforeEach(function(a){FrontendCore.require(["autocomplete"],function(){void 0!==a&&a()})}),it("should exist",function(){oTestedModule=FrontendCore.instantiate("autocomplete"),expect(oTestedModule).toBeTruthy()}),describe("oDefault",function(){it("should have all the parameters",function(){expect(oTestedModule.oDefault.limit).toBeDefined()})}),describe("onStart",function(){beforeEach(function(){spyOn(FrontendTools,"getDataModules"),spyOn(FrontendTools,"loadCSS"),spyOn(FrontendTools,"trackModule"),spyOn(oTestedModule,"autobind"),oTestedModule.onStart()}),it("should exist",function(){expect(oTestedModule.onStart).toBeTruthy()}),it("should call FrontendTools.load CSS",function(){expect(FrontendTools.loadCSS).toHaveBeenCalled()}),it('should call FrontendTools.trackModule with "JS_Libraries", "call", "autocomplete"',function(){expect(FrontendTools.trackModule).toHaveBeenCalledWith("JS_Libraries","call","autocomplete")})}),describe("autobind",function(){beforeEach(function(){var a=$('<input name="toyName" value="foo" data-fc-values="foo,bar">');spyOn(jQuery.fn,"autocompleter"),spyOn(FrontendTools,"mergeJSON"),oTestedModule.autobind(a[0])}),it("should exist",function(){expect(oTestedModule.autobind).toBeTruthy()}),it("should call jQuery autocompleter",function(){expect(jQuery.fn.autocompleter).toHaveBeenCalled()})})});